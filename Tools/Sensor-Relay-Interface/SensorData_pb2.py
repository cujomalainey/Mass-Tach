# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: SensorData.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import nanopb_pb2 as nanopb__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='SensorData.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x10SensorData.proto\x1a\x0cnanopb.proto\"\xad\x01\n\rChannelConfig\x12$\n\x15\x63hannel_serial_number\x18\x01 \x03(\x05\x42\x05\x92?\x02\x10\x0f\x12\x36\n\x0c\x63hannel_type\x18\x02 \x03(\x0e\x32\x19.ChannelConfig.SensorTypeB\x05\x92?\x02\x10\x0f\">\n\nSensorType\x12\x10\n\x0c\x42IKE_CADENCE\x10\x00\x12\x0e\n\nBIKE_SPEED\x10\x01\x12\x0e\n\nHR_MONITOR\x10\x02\"\x9c\x01\n\nSensorData\x12\x1d\n\x0e\x63hannel_counts\x18\x01 \x03(\x05\x42\x05\x92?\x02\x10\x0f\x12:\n\rchannel_state\x18\x02 \x03(\x0e\x32\x1c.SensorData.ConnnectionStateB\x05\x92?\x02\x10\x0f\"3\n\x10\x43onnnectionState\x12\x10\n\x0c\x44ISCONNECTED\x10\x00\x12\r\n\tCONNECTED\x10\x01\x62\x06proto3')
  ,
  dependencies=[nanopb__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_CHANNELCONFIG_SENSORTYPE = _descriptor.EnumDescriptor(
  name='SensorType',
  full_name='ChannelConfig.SensorType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='BIKE_CADENCE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BIKE_SPEED', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='HR_MONITOR', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=146,
  serialized_end=208,
)
_sym_db.RegisterEnumDescriptor(_CHANNELCONFIG_SENSORTYPE)

_SENSORDATA_CONNNECTIONSTATE = _descriptor.EnumDescriptor(
  name='ConnnectionState',
  full_name='SensorData.ConnnectionState',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DISCONNECTED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONNECTED', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=316,
  serialized_end=367,
)
_sym_db.RegisterEnumDescriptor(_SENSORDATA_CONNNECTIONSTATE)


_CHANNELCONFIG = _descriptor.Descriptor(
  name='ChannelConfig',
  full_name='ChannelConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='channel_serial_number', full_name='ChannelConfig.channel_serial_number', index=0,
      number=1, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222?\002\020\017'))),
    _descriptor.FieldDescriptor(
      name='channel_type', full_name='ChannelConfig.channel_type', index=1,
      number=2, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222?\002\020\017'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CHANNELCONFIG_SENSORTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=35,
  serialized_end=208,
)


_SENSORDATA = _descriptor.Descriptor(
  name='SensorData',
  full_name='SensorData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='channel_counts', full_name='SensorData.channel_counts', index=0,
      number=1, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222?\002\020\017'))),
    _descriptor.FieldDescriptor(
      name='channel_state', full_name='SensorData.channel_state', index=1,
      number=2, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222?\002\020\017'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SENSORDATA_CONNNECTIONSTATE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=211,
  serialized_end=367,
)

_CHANNELCONFIG.fields_by_name['channel_type'].enum_type = _CHANNELCONFIG_SENSORTYPE
_CHANNELCONFIG_SENSORTYPE.containing_type = _CHANNELCONFIG
_SENSORDATA.fields_by_name['channel_state'].enum_type = _SENSORDATA_CONNNECTIONSTATE
_SENSORDATA_CONNNECTIONSTATE.containing_type = _SENSORDATA
DESCRIPTOR.message_types_by_name['ChannelConfig'] = _CHANNELCONFIG
DESCRIPTOR.message_types_by_name['SensorData'] = _SENSORDATA

ChannelConfig = _reflection.GeneratedProtocolMessageType('ChannelConfig', (_message.Message,), dict(
  DESCRIPTOR = _CHANNELCONFIG,
  __module__ = 'SensorData_pb2'
  # @@protoc_insertion_point(class_scope:ChannelConfig)
  ))
_sym_db.RegisterMessage(ChannelConfig)

SensorData = _reflection.GeneratedProtocolMessageType('SensorData', (_message.Message,), dict(
  DESCRIPTOR = _SENSORDATA,
  __module__ = 'SensorData_pb2'
  # @@protoc_insertion_point(class_scope:SensorData)
  ))
_sym_db.RegisterMessage(SensorData)


_CHANNELCONFIG.fields_by_name['channel_serial_number'].has_options = True
_CHANNELCONFIG.fields_by_name['channel_serial_number']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222?\002\020\017'))
_CHANNELCONFIG.fields_by_name['channel_type'].has_options = True
_CHANNELCONFIG.fields_by_name['channel_type']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222?\002\020\017'))
_SENSORDATA.fields_by_name['channel_counts'].has_options = True
_SENSORDATA.fields_by_name['channel_counts']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222?\002\020\017'))
_SENSORDATA.fields_by_name['channel_state'].has_options = True
_SENSORDATA.fields_by_name['channel_state']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\222?\002\020\017'))
# @@protoc_insertion_point(module_scope)
